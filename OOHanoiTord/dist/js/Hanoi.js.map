{"version":3,"sources":["../../src/js/Hanoi.js"],"names":["Hanoi","constructor","pegs","towerOfHanoi","numberOfDisks","dir","currentPeg","previousPeg","buildTower","numberOfMoves","Math","pow","next","prev","moveSmallest","i","moveDisk","moves","topDiskSize","endResult","length","push","toString","from","to","addDisk","removeTopDisk","resetHanoi"],"mappings":"AAAA;;;;;;AACA;;;;;;AACe,MAAMA,KAAN,CAAY;AACzBC,gBAAa;AACX;AACA,SAAKC,IAAL,GAAY,CAAC,mBAAD,EAAW,mBAAX,EAAqB,mBAArB,CAAZ;AACD;AACDC,eAAaC,aAAb,EAA2B;AAC3B;AACA,QAAIC,MAAM,CAAV;AACA,QAAGD,gBAAgB,CAAhB,IAAqB,CAAxB,EAA0B;AACxBC,YAAM,CAAN;AACD,KAFD,MAEK;AACHA,YAAM,CAAC,CAAP;AACD;AACD,QAAIC,aAAa,CAAjB;AACA,QAAIC,cAAc,CAAlB;;AAEA,SAAKL,IAAL,CAAU,CAAV,EAAaM,UAAb,CAAwBJ,aAAxB;;AAGA,QAAIK,gBAAgBC,KAAKC,GAAL,CAAS,CAAT,EAAWP,aAAX,IAA4B,CAAhD;;AAEA,QAAIQ,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX;AACA,QAAIC,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAX;;AAEA,QAAIC,eAAe,IAAnB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,aAApB,EAAmCM,GAAnC,EAAwC;AACpC;AACA,UAAID,YAAJ,EAAkB;AAChBP,sBAAcD,UAAd;AACAA,qBAAa,CAACC,cAAcF,GAAd,GAAoB,CAArB,IAA0B,CAAvC;AACA,aAAKW,QAAL,CAAcT,WAAd,EAA2BD,UAA3B,EAAuC,KAAKJ,IAA5C,EAAkD,KAAKe,KAAvD;AACD;AACD;AALA,WAMK;AACH,cAAI,KAAKf,IAAL,CAAUU,KAAKN,UAAL,CAAV,EAA4BY,WAA5B,KAA4C,KAAKhB,IAAL,CAAUW,KAAKP,UAAL,CAAV,EAA4BY,WAA5B,EAAhD,EAA2F;AACzF,iBAAKF,QAAL,CAAcH,KAAKP,UAAL,CAAd,EAAgCM,KAAKN,UAAL,CAAhC;AACD,WAFD,MAGK;AACH,iBAAKU,QAAL,CAAcJ,KAAKN,UAAL,CAAd,EAAgCO,KAAKP,UAAL,CAAhC;AACD;AACJ;AACDQ,qBAAe,CAACA,YAAhB;AACD;AACD,QAAIK,YAAY,EAAhB;AACA,SAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAI,KAAKb,IAAL,CAAUkB,MAA9B,EAAsCL,GAAtC,EAA2C;AACzCI,gBAAUE,IAAV,CAAe,KAAKnB,IAAL,CAAUa,CAAV,EAAaO,QAAb,EAAf;AACD;AACDH,cAAUE,IAAV,CAAeZ,aAAf;AACA,WAAOU,SAAP;AACA;;AAEDH,WAASO,IAAT,EAAeC,EAAf,EAAmB;AACjB;AACA,SAAKtB,IAAL,CAAUsB,EAAV,EAAcC,OAAd,CAAsB,KAAKvB,IAAL,CAAUqB,IAAV,EAAgBG,aAAhB,EAAtB;AACD;;AAEDC,eAAY;AACV,SAAKV,KAAL,GAAa,EAAb;AACA,SAAKf,IAAL,GAAY,CAAC,mBAAD,EAAW,mBAAX,EAAqB,mBAArB,CAAZ;AACD;AA5DyB;kBAANF,K","file":"Hanoi.js","sourcesContent":["'use strict';\nimport Peg from './peg.js';\nexport default class Hanoi {\n  constructor(){\n    //this.moves = [];\n    this.pegs = [new Peg(),new Peg(),new Peg()];\n  }\n  towerOfHanoi(numberOfDisks){\n  // direction of rotation of the smallest disk\n  var dir = 0;\n  if(numberOfDisks % 2 == 0){\n    dir = 1;\n  }else{\n    dir = -1;\n  }\n  var currentPeg = 0;\n  var previousPeg = 0;\n\n  this.pegs[0].buildTower(numberOfDisks);\n\n\n  var numberOfMoves = Math.pow(2,numberOfDisks) - 1;\n\n  var next = [1, 2, 0];\n  var prev = [2, 0, 1];\n\n  var moveSmallest = true;\n\n  for (var i = 0; i < numberOfMoves; i++) {\n      //Moves smallest disk to make place for other disks to move\n      if (moveSmallest) {\n        previousPeg = currentPeg;\n        currentPeg = (previousPeg + dir + 3) % 3;\n        this.moveDisk(previousPeg, currentPeg, this.pegs, this.moves);\n      }\n      //Moves other disks\n      else {\n        if (this.pegs[next[currentPeg]].topDiskSize() > this.pegs[prev[currentPeg]].topDiskSize()) {\n          this.moveDisk(prev[currentPeg], next[currentPeg]);\n        }\n        else {\n          this.moveDisk(next[currentPeg], prev[currentPeg]);\n        }\n    }\n    moveSmallest = !moveSmallest;\n  }\n  var endResult = [];\n  for (var i = 0; i < this.pegs.length; i++) {\n    endResult.push(this.pegs[i].toString());\n  }\n  endResult.push(numberOfMoves);\n  return endResult;\n }\n\n moveDisk(from, to) {\n   //this.moves.push([from+1 +\" -> \"+ to+1]);\n   this.pegs[to].addDisk(this.pegs[from].removeTopDisk());\n }\n\n resetHanoi(){\n   this.moves = [];\n   this.pegs = [new Peg(),new Peg(),new Peg()];\n }\n}\n"]}