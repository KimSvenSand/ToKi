{"version":3,"sources":["../../src/js/Shellsort.js"],"names":["getGapSequence","random","shellsortContainer","findBiggestGap","shellsort","useCurrentGap","replaceValues","length","gapSequence","sequenceCopy","slice","push","Math","pow","array","arrayCopy","floor","inputArray","currentGapIndex","sortedArray","inputArrayLength","index","currentValue","currentIndex","currentGap","indexCopy","valueCopy","arr"],"mappings":"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","file":"Shellsort.js","sourcesContent":["'use strict';\n\nexport function getGapSequence(length,gapSequence){\n  var sequenceCopy = gapSequence.slice();\n  if(length >= 0){\n    if(length == 0){\n      gapSequence.push(0);\n    }else{\n      sequenceCopy = getGapSequence(length - 1,sequenceCopy);\n    }\n  }\n\n  sequenceCopy.push(9*(Math.pow(4,length) - Math.pow(2,length)) + 1);\n  sequenceCopy.push(Math.pow(2,length+2)*(Math.pow(2,length+2)-3)+1);\n\n  return sequenceCopy;\n}\n\nexport function random(length,array){\n  var arrayCopy = array.slice();\n  if(length >= 0){\n    arrayCopy.push(Math.floor((Math.random()*100)+1));\n    arrayCopy = random(length-1,array);\n  }\n  return arrayCopy;\n}\n\nexport function shellsortContainer(inputArray,gapSequence){\n  var currentGapIndex = findBiggestGap(inputArray.length,gapSequence,0);\n  var sortedArray = shellsort(currentGapIndex,gapSequence,0,0,inputArray);\n  return sortedArray;\n}\n\nexport function findBiggestGap(inputArrayLength, gapSequence, currentGapIndex){\n  var index = currentGapIndex;\n  if(gapSequence[index] > inputArrayLength/2){\n    index = index-1;\n  }else if(gapSequence[index] < inputArrayLength/2){\n    index = findBiggestGap(inputArrayLength,gapSequence,index+1);\n  }\n  return index;\n}\n\nexport function shellsort(currentGapIndex,gapSequence,currentValue,currentIndex,inputArray){\n  var arrayCopy = inputArray.slice();\n  if(gapSequence[currentGapIndex] > 0){\n    arrayCopy = useCurrentGap(gapSequence[currentGapIndex],0,gapSequence[currentGapIndex],arrayCopy);\n    arrayCopy = shellsort(currentGapIndex-1,gapSequence,currentValue,currentIndex,arrayCopy);\n  }\n  return arrayCopy;\n}\n\nexport function useCurrentGap(currentGap,currentValue,currentIndex,inputArray){\n  var arrayCopy = inputArray.slice();\n  var indexCopy = currentIndex;\n  var valueCopy = currentValue;\n  if(indexCopy < arrayCopy.length){\n    valueCopy = arrayCopy[indexCopy];\n    var arr = replaceValues(arrayCopy,indexCopy,currentGap,valueCopy);\n    arrayCopy = arr[0];\n    indexCopy = arr[1];\n    arrayCopy[indexCopy] = valueCopy;\n\n    arrayCopy = useCurrentGap(currentGap,valueCopy,currentIndex+1,arrayCopy);\n  }\n  return arrayCopy;\n}\n\nexport function replaceValues(inputArray,currentIndex,currentGap,currentValue){\n  var arrayCopy = inputArray.slice();\n  var indexCopy = currentIndex;\n  if((indexCopy - currentGap) >= 0 && arrayCopy[indexCopy - currentGap] > currentValue){\n    arrayCopy[currentIndex] = arrayCopy[currentIndex -currentGap];\n    indexCopy = indexCopy - currentGap;\n    var arr = replaceValues(arrayCopy,indexCopy,currentGap,currentValue);\n    arrayCopy = arr[0];\n    indexCopy = arr[1];\n  }\n  return [arrayCopy,indexCopy];\n}\n"]}