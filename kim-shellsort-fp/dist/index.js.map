{"version":3,"sources":["../src/index.js"],"names":["console","log","size","runMeasurements","createRandomArray","global","gc","array","hrStart","process","hrtime","memStart","memoryUsage","rss","info","inspect","memEnd","hrEnd","getRandom","Math","floor","random","randomArray","length","concat"],"mappings":";;AAAA;;AACA;;;;;;AACA;;AAEAA,QAAQC,GAAR,CAAY,cAAZ;AACA,IAAIC,OAAO,IAAX;AACAF,QAAQC,GAAR,CAAY,gBAAgBC,IAA5B;AACAC,gBAAgBC,kBAAkBF,IAAlB,CAAhB;AACAG,OAAOC,EAAP;;AAEA,SAASH,eAAT,CAAyBI,KAAzB,EAAgC;AAC9B,MAAIC,UAAUC,QAAQC,MAAR,EAAd;AACA,MAAIC,WAAWF,QAAQG,WAAR,GAAsBC,GAArC;AACAb,UAAQc,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAA1B;;AAEA,qCAAUL,KAAV;;AAEAP,UAAQc,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAAxB;AACA,MAAII,SAASP,QAAQG,WAAR,GAAsBC,GAAnC;AACA,MAAII,QAAQR,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAR,UAAQc,IAAR,CAAa,cAAcG,MAAM,CAAN,CAAd,GAAyB,QAAzB,GAAoCA,MAAM,CAAN,IAAW,OAA/C,GAAyD,IAAtE;AACAjB,UAAQc,IAAR,CAAa,cAAcE,SAASL,QAAvB,CAAb;AACD;;AAED,SAASP,iBAAT,CAA2BF,IAA3B,EAAiC;AAC/B,MAAIgB,YAAY,YAAW;AACzB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBnB,IAAhB,GAAuB,CAAxB,GAA6B,CAAxC,CAAP;AACD,GAFD;;AAIA,MAAIoB,cAAc,EAAlB;AACA,MAAIA,YAAYC,MAAZ,IAAsBrB,IAA1B,EAAgC;AAC9B,WAAOoB,WAAP;AACD,GAFD,MAEO;AACL,WAAOA,YAAYE,MAAZ,CAAmBN,WAAnB,EAAgCM,MAAhC,CAAuCpB,kBAAkBF,OAAO,CAAzB,CAAvC,CAAP;AACD;AACF","file":"index.js","sourcesContent":["import { shellsort } from './js/shellsort-functions';\nimport util from 'util';\n'use strict';\n\nconsole.log('Shellsort FP');\nvar size = 6000;\nconsole.log(\"Data size: \" + size);\nrunMeasurements(createRandomArray(size));\nglobal.gc();\n\nfunction runMeasurements(array) {\n  var hrStart = process.hrtime();\n  var memStart = process.memoryUsage().rss;\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\n\n  shellsort(array);\n\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\n  var memEnd = process.memoryUsage().rss;\n  let hrEnd = process.hrtime(hrStart);\n  console.info('Runtime: ' + hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\n  console.info('Memory: ' + (memEnd - memStart));\n}\n\nfunction createRandomArray(size) {\n  var getRandom = function() {\n    return Math.floor((Math.random() * size * 2) + 1);\n  }\n\n  var randomArray = [];\n  if (randomArray.length >= size) {\n    return randomArray;\n  } else {\n    return randomArray.concat(getRandom()).concat(createRandomArray(size - 1));\n  }\n}\n"]}