{"version":3,"sources":["../src/index.js"],"names":["size","runMeasurements","hrStart","process","hrtime","console","info","inspect","memoryUsage","tree","createRandomTree","getRandom","hrEnd","random","Math","floor"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAEA,IAAIA,OAAO,KAAX;;AAEAC,gBAAgBD,IAAhB;;AAEA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,MAAIE,UAAUC,QAAQC,MAAR,EAAd;AACAC,UAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA1B;AACA,MAAIC,OAAOC,iBAAiBV,IAAjB,CAAX;AACAK,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAjC;AACA,uCAAiBC,IAAjB;AACAJ,UAAQC,IAAR,CAAa,8BAA8B,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA3C;AACA,+BAASG,WAAT,EAAsBF,IAAtB;AACA,+BAASE,WAAT,EAAsBF,IAAtB;AACA,+BAASE,WAAT,EAAsBF,IAAtB;AACAJ,UAAQC,IAAR,CAAa,gCAAgC,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA7C;AACA,MAAII,QAAQT,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAG,UAAQC,IAAR,CAAaM,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACD;;AAED,SAASF,gBAAT,CAA0BV,IAA1B,EAAgCS,IAAhC,EAAsC;AACpC,MAAIT,QAAQ,CAAZ,EAAe;AACb,WAAOS,IAAP;AACD,GAFD,MAEO;AACL,QAAII,SAASF,WAAb;AACA,QAAI,6BAASE,MAAT,EAAiBJ,IAAjB,CAAJ,EAA4B;AAC1B,aAAOC,iBAAiBV,IAAjB,EAAuB,2BAAOa,MAAP,EAAeJ,IAAf,CAAvB,CAAP;AACD,KAFD,MAEO;AACL,aAAOC,iBAAiBV,OAAO,CAAxB,EAA2B,2BAAOa,MAAP,EAAeJ,IAAf,CAA3B,CAAP;AACD;AACF;AACF;;AAED,SAASE,SAAT,GAAqB;AACnB,SAAOG,KAAKC,KAAL,CAAYD,KAAKD,MAAL,KAAgBb,IAAhB,GAAuB,EAAxB,GAA8B,CAAzC,CAAP;AACD","file":"index.js","sourcesContent":["import util from 'util';\r\nimport { insert, findNode, inOrderTraversal } from './js/tree-functions'\r\n'use strict';\r\n\r\nvar size = 10000;\r\n\r\nrunMeasurements(size);\r\n\r\nfunction runMeasurements(size) {\r\n  var hrStart = process.hrtime();\r\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\r\n  var tree = createRandomTree(size);\r\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\r\n  inOrderTraversal(tree);\r\n  console.info('after inOrderTraversal:\\n' + util.inspect(process.memoryUsage()));\r\n  findNode(getRandom(), tree);\r\n  findNode(getRandom(), tree);\r\n  findNode(getRandom(), tree);\r\n  console.info('after 3x random findNode:\\n' + util.inspect(process.memoryUsage()));\r\n  let hrEnd = process.hrtime(hrStart);\r\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\r\n}\r\n\r\nfunction createRandomTree(size, tree) {\r\n  if (size <= 0) {\r\n    return tree;\r\n  } else {\r\n    let random = getRandom();\r\n    if (findNode(random, tree)) {\r\n      return createRandomTree(size, insert(random, tree));\r\n    } else {\r\n      return createRandomTree(size - 1, insert(random, tree));\r\n    }\r\n  }\r\n}\r\n\r\nfunction getRandom() {\r\n  return Math.floor((Math.random() * size * 10) + 1);\r\n}\r\n"]}