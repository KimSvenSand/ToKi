{"version":3,"sources":["../src/index.js"],"names":["size","hrStart","process","hrtime","console","info","inspect","memoryUsage","runMeasurements","hrEnd","tree","createRandomTree","mRandom","Math","floor","random","length"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAEA,IAAIA,OAAO,GAAX;;AAEA,IAAIC,UAAUC,QAAQC,MAAR,EAAd;AACAC,QAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA1B;AACAC,gBAAgBR,IAAhB;AACAI,QAAQC,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAxB;AACA,IAAIE,QAAQP,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAG,QAAQC,IAAR,CAAaI,MAAM,CAAN,IAAW,OAAX,GAAqB,IAAlC;;AAEA,SAASD,eAAT,CAAyBR,IAAzB,EAA+B;AAC7B,MAAIU,OAAOC,iBAAiBX,IAAjB,CAAX;AACAI,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAjC;AACA,uCAAiBG,IAAjB;AACAN,UAAQC,IAAR,CAAa,uBAAuB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAApC;AACD;;AAED,SAASI,gBAAT,CAA0BX,IAA1B,EAAgCU,IAAhC,EAAsC;AACpC,MAAIE,UAAU,YAAW;AACvB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBf,IAAhB,GAAuB,CAAxB,GAA6B,CAAxC,CAAP;AACD,GAFD;;AAIA,MAAI,qCAAiBU,IAAjB,EAAuBM,MAAvB,IAAiChB,IAArC,EAA2C;AACzC,WAAOU,IAAP;AACD,GAFD,MAEO;AACL,WAAOC,iBAAiBX,IAAjB,EAAuB,2BAAOY,SAAP,EAAkBF,IAAlB,CAAvB,CAAP;AACD;AACF","file":"index.js","sourcesContent":["import util from 'util';\nimport { insert, findNode, inOrderTraversal } from './js/tree-functions'\n'use strict';\n\nvar size = 100;\n\nvar hrStart = process.hrtime();\nconsole.info('start:\\n' + util.inspect(process.memoryUsage()));\nrunMeasurements(size);\nconsole.info('end:\\n' + util.inspect(process.memoryUsage()));\nlet hrEnd = process.hrtime(hrStart);\nconsole.info(hrEnd[1] / 1000000 + 'ms');\n\nfunction runMeasurements(size) {\n  var tree = createRandomTree(size);\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\n  inOrderTraversal(tree);\n  console.info('after traversal:\\n' + util.inspect(process.memoryUsage()));\n}\n\nfunction createRandomTree(size, tree) {\n  var mRandom = function() {\n    return Math.floor((Math.random() * size * 2) + 1);\n  }\n\n  if (inOrderTraversal(tree).length >= size) {\n    return tree;\n  } else {\n    return createRandomTree(size, insert(mRandom(), tree));\n  }\n}\n"]}