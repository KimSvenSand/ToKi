{"version":3,"sources":["../src/index.js"],"names":["size","runMeasurements","hrStart","process","hrtime","console","info","inspect","memoryUsage","tree","createRandomTree","hrEnd","mRandom","Math","floor","random","length"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAEA,IAAIA,OAAO,GAAX;;AAEAC,gBAAgBD,IAAhB;;AAEA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,MAAIE,UAAUC,QAAQC,MAAR,EAAd;AACAC,UAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA1B;AACA,MAAIC,OAAOC,iBAAiBV,IAAjB,CAAX;AACAK,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAjC;AACA,uCAAiBC,IAAjB;AACAJ,UAAQC,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAxB;AACA,MAAIG,QAAQR,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAG,UAAQC,IAAR,CAAaK,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACD;;AAED,SAASD,gBAAT,CAA0BV,IAA1B,EAAgCS,IAAhC,EAAsC;AACpC,MAAIG,UAAU,YAAW;AACvB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBf,IAAhB,GAAuB,CAAxB,GAA6B,CAAxC,CAAP;AACD,GAFD;;AAIA,MAAI,qCAAiBS,IAAjB,EAAuBO,MAAvB,IAAiChB,IAArC,EAA2C;AACzC,WAAOS,IAAP;AACD,GAFD,MAEO;AACL,WAAOC,iBAAiBV,IAAjB,EAAuB,2BAAOY,SAAP,EAAkBH,IAAlB,CAAvB,CAAP;AACD;AACF","file":"index.js","sourcesContent":["import util from 'util';\nimport { insert, findNode, inOrderTraversal } from './js/tree-functions'\n'use strict';\n\nvar size = 100;\n\nrunMeasurements(size);\n\nfunction runMeasurements(size) {\n  var hrStart = process.hrtime();\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\n  var tree = createRandomTree(size);\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\n  inOrderTraversal(tree);\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\n  let hrEnd = process.hrtime(hrStart);\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\n}\n\nfunction createRandomTree(size, tree) {\n  var mRandom = function() {\n    return Math.floor((Math.random() * size * 2) + 1);\n  }\n\n  if (inOrderTraversal(tree).length >= size) {\n    return tree;\n  } else {\n    return createRandomTree(size, insert(mRandom(), tree));\n  }\n}\n"]}