<<<<<<< HEAD
{"version":3,"sources":["../src/index.js"],"names":["size","runMeasurements","hrStart","process","hrtime","startMem","memoryUsage","heapUsed","console","info","inspect","mTree","Math","floor","random","initiateRandomTree","inOrderTraversal","findNode","endMem","hrEnd"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;AAEA,IAAIA,OAAO,IAAX;;AAEAC,gBAAgBD,IAAhB;;AAEA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,MAAIE,UAAUC,QAAQC,MAAR,EAAd;AACA,MAAIC,WAAWF,QAAQG,WAAR,GAAsBC,QAArC;AACAC,UAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaP,QAAQG,WAAR,EAAb,CAA1B;AACA,MAAIK,QAAQ,+BAAqBC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBd,IAAhB,GAAuB,EAAxB,GAA8B,CAAzC,CAArB,CAAZ;AACAW,QAAMI,kBAAN,CAAyBf,IAAzB;AACAQ,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaP,QAAQG,WAAR,EAAb,CAAjC;AACAK,QAAMK,gBAAN;AACAR,UAAQC,IAAR,CAAa,8BAA8B,eAAKC,OAAL,CAAaP,QAAQG,WAAR,EAAb,CAA3C;AACAK,QAAMM,QAAN,CAAgBL,KAAKE,MAAL,KAAgBd,IAAhB,GAAuB,CAAxB,GAA6B,CAA5C;AACAW,QAAMM,QAAN,CAAgBL,KAAKE,MAAL,KAAgBd,IAAhB,GAAuB,CAAxB,GAA6B,CAA5C;AACAW,QAAMM,QAAN,CAAgBL,KAAKE,MAAL,KAAgBd,IAAhB,GAAuB,CAAxB,GAA6B,CAA5C;AACA,MAAIkB,SAASf,QAAQG,WAAR,GAAsBC,QAAnC;AACAC,UAAQC,IAAR,CAAa,gCAAgC,eAAKC,OAAL,CAAaP,QAAQG,WAAR,EAAb,CAA7C;;AAEA,MAAIa,QAAQhB,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAM,UAAQC,IAAR,CAAaU,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACAX,UAAQC,IAAR,CAAa,2BAA2BJ,QAAxC;AACAG,UAAQC,IAAR,CAAa,yBAAyBS,MAAtC;AACAV,UAAQC,IAAR,CAAaU,MAAM,CAAN,IAAW,IAAX,GAAkBA,MAAM,CAAN,IAAW,OAA1C;AACAX,UAAQC,IAAR,CAAaS,SAASb,QAAtB;AACD","file":"index.js","sourcesContent":["import util from 'util';\nimport BinarySearchTree from './js/BinarySearchTree'\n'use strict';\n\nvar size = 1000;\n\nrunMeasurements(size);\n\nfunction runMeasurements(size) {\n  var hrStart = process.hrtime();\n  var startMem = process.memoryUsage().heapUsed;\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\n  var mTree = new BinarySearchTree(Math.floor((Math.random() * size * 10) + 1));\n  mTree.initiateRandomTree(size);\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\n  mTree.inOrderTraversal();\n  console.info('after inOrderTraversal:\\n' + util.inspect(process.memoryUsage()));\n  mTree.findNode((Math.random() * size * 2) + 1);\n  mTree.findNode((Math.random() * size * 2) + 1);\n  mTree.findNode((Math.random() * size * 2) + 1);\n  var endMem = process.memoryUsage().heapUsed;\n  console.info('after 3x random findNode:\\n' + util.inspect(process.memoryUsage()));\n\n  let hrEnd = process.hrtime(hrStart);\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\n  console.info('Initial memory usage: ' + startMem);\n  console.info('Final memory usage: ' + endMem);\n  console.info(hrEnd[0] * 1000 + hrEnd[1] / 1000000);\n  console.info(endMem - startMem);\n}\n"]}
=======
{"version":3,"sources":["../src/index.js"],"names":["size","runMeasurements","hrStart","process","hrtime","console","info","inspect","memoryUsage","mTree","initiateTree","inOrderTraversal","hrEnd","nrOfElements","mRandom","Math","floor","random","tree","getSize","insert"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;AAEA,IAAIA,OAAO,GAAX;;AAEAC,gBAAgBD,IAAhB;;AAEA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,MAAIE,UAAUC,QAAQC,MAAR,EAAd;AACAC,UAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA1B;AACA,MAAIC,QAAQC,aAAaV,IAAb,CAAZ;AACAK,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAjC;AACAC,QAAME,gBAAN;AACAN,UAAQC,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAxB;AACA,MAAII,QAAQT,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAG,UAAQC,IAAR,CAAaM,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACD;;AAED,SAASF,YAAT,CAAsBG,YAAtB,EAAoC;AAClC,MAAIC,UAAU,YAAW;AACvB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBJ,YAAhB,GAA+B,CAAhC,GAAqC,CAAhD,CAAP;AACD,GAFD;AAGA,MAAIK,OAAO,+BAAqBJ,SAArB,CAAX;;AAEA,SAAOI,KAAKC,OAAL,KAAiBN,YAAxB,EAAsC;AACpCK,SAAKE,MAAL,CAAYN,SAAZ;AACD;;AAED,SAAOI,IAAP;AACD","file":"index.js","sourcesContent":["import util from 'util';\r\nimport BinarySearchTree from './js/BinarySearchTree'\r\n'use strict';\r\n\r\nvar size = 100;\r\n\r\nrunMeasurements(size);\r\n\r\nfunction runMeasurements(size) {\r\n  var hrStart = process.hrtime();\r\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\r\n  var mTree = initiateTree(size);\r\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\r\n  mTree.inOrderTraversal();\r\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\r\n  let hrEnd = process.hrtime(hrStart);\r\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\r\n}\r\n\r\nfunction initiateTree(nrOfElements) {\r\n  var mRandom = function() {\r\n    return Math.floor((Math.random() * nrOfElements * 2) + 1);\r\n  }\r\n  var tree = new BinarySearchTree(mRandom());\r\n\r\n  while (tree.getSize() < nrOfElements) {\r\n    tree.insert(mRandom());\r\n  }\r\n\r\n  return tree;\r\n}\r\n"]}
>>>>>>> 20aabe29a3a388a8f13f6f679d624c15ff35c5e1
