{"version":3,"sources":["../src/index.js"],"names":["size","runMeasurements","hrStart","process","hrtime","console","info","inspect","memoryUsage","mTree","initiateTree","inOrderTraversal","hrEnd","nrOfElements","mRandom","Math","floor","random","tree","getSize","insert"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;AAEA,IAAIA,OAAO,GAAX;;AAEAC,gBAAgBD,IAAhB;;AAEA,SAASC,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,MAAIE,UAAUC,QAAQC,MAAR,EAAd;AACAC,UAAQC,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAA1B;AACA,MAAIC,QAAQC,aAAaV,IAAb,CAAZ;AACAK,UAAQC,IAAR,CAAa,oBAAoB,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAjC;AACAC,QAAME,gBAAN;AACAN,UAAQC,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaJ,QAAQK,WAAR,EAAb,CAAxB;AACA,MAAII,QAAQT,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAG,UAAQC,IAAR,CAAaM,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACD;;AAED,SAASF,YAAT,CAAsBG,YAAtB,EAAoC;AAClC,MAAIC,UAAU,YAAW;AACvB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBJ,YAAhB,GAA+B,CAAhC,GAAqC,CAAhD,CAAP;AACD,GAFD;AAGA,MAAIK,OAAO,+BAAqBJ,SAArB,CAAX;;AAEA,SAAOI,KAAKC,OAAL,KAAiBN,YAAxB,EAAsC;AACpCK,SAAKE,MAAL,CAAYN,SAAZ;AACD;;AAED,SAAOI,IAAP;AACD","file":"index.js","sourcesContent":["import util from 'util';\r\nimport BinarySearchTree from './js/BinarySearchTree'\r\n'use strict';\r\n\r\nvar size = 100;\r\n\r\nrunMeasurements(size);\r\n\r\nfunction runMeasurements(size) {\r\n  var hrStart = process.hrtime();\r\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\r\n  var mTree = initiateTree(size);\r\n  console.info('after insert:\\n' + util.inspect(process.memoryUsage()));\r\n  mTree.inOrderTraversal();\r\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\r\n  let hrEnd = process.hrtime(hrStart);\r\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\r\n}\r\n\r\nfunction initiateTree(nrOfElements) {\r\n  var mRandom = function() {\r\n    return Math.floor((Math.random() * nrOfElements * 2) + 1);\r\n  }\r\n  var tree = new BinarySearchTree(mRandom());\r\n\r\n  while (tree.getSize() < nrOfElements) {\r\n    tree.insert(mRandom());\r\n  }\r\n\r\n  return tree;\r\n}\r\n"]}