{"version":3,"sources":["../es6-test/Shellsort-test.js"],"names":["describe","shellsort","input","it","expectedArray","calculateGapSequence","to","eql","sort"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAEAA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAIC,YAAY,yBAAhB;AACA,MAAIC,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAAZ;;AAEAF,WAAS,yBAAT,EAAoC,YAAW;AAC7CG,OAAG,yCAAH,EAA8C,YAAW;AACvD,UAAIC,gBAAgB,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,CAApB;AACA,wBAAOH,UAAUI,oBAAV,CAA+B,GAA/B,CAAP,EAA4CC,EAA5C,CAA+CC,GAA/C,CAAmDH,aAAnD;AACD,KAHD;AAID,GALD;;AAOAJ,WAAS,aAAT,EAAwB,YAAW;AACjCG,OAAG,mFAAH,EAAwF,YAAW;AACjG,UAAIC,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,EAA7B,CAApB;AACA,wBAAOH,UAAUO,IAAV,CAAeN,KAAf,CAAP,EAA8BI,EAA9B,CAAiCC,GAAjC,CAAqCH,aAArC;AACA,wBAAOH,UAAUO,IAAV,CAAe,EAAf,CAAP,EAA2BF,EAA3B,CAA8BC,GAA9B,CAAkC,EAAlC;AACD,KAJD;AAKD,GAND;AAOD,CAlBD","file":"Shellsort-test.js","sourcesContent":["import Shellsort from '../dist/js/Shellsort';\nimport { expect } from 'chai';\n'use strict';\n\ndescribe('Shellsort', function() {\n  var shellsort = new Shellsort();\n  var input = [9, 8, 1, 15, 3, 4, 11, 2, 7, 6];\n\n  describe('calculateGapSequence(n)', function() {\n    it('Returns a gapSequence for n-sized array', function() {\n      var expectedArray = [109, 41, 19, 5, 1];\n      expect(shellsort.calculateGapSequence(200)).to.eql(expectedArray);\n    });\n  });\n\n  describe('shellsort()', function() {\n    it('Should return a sorted array. If array is empty an emtpy array should be returned', function() {\n      var expectedArray = [1, 2, 3, 4, 6, 7, 8, 9, 11, 15];\n      expect(shellsort.sort(input)).to.eql(expectedArray);\n      expect(shellsort.sort([])).to.eql([]);\n    });\n  });\n});\n"]}