{"version":3,"sources":["../../src/js/Shellsort.js"],"names":["Shellsort","constructor","insertionSort","shellsort","array","sortedArray","gapSequence","calculateGapSequence","length","currentGapIndex","n","sequence","k1","k2","push","Math","pow","reverse"],"mappings":";;;;;;AAAA;;;;;;AACA;;AAEe,MAAMA,SAAN,CAAgB;AAC7BC,gBAAc;AACZ,SAAKC,aAAL,GAAqB,6BAArB;AACD;;AAEDC,YAAUC,KAAV,EAAiB;AACf,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AAED,QAAIC,cAAcD,KAAlB;AACA,QAAIE,cAAc,KAAKC,oBAAL,CAA0BH,MAAMI,MAAhC,CAAlB;AACA,QAAIC,kBAAkB,CAAtB;;AAEA,WAAOH,YAAYG,eAAZ,KAAgC,CAAvC,EAA0C;AACxCJ,oBAAc,KAAKH,aAAL,CAAmBA,aAAnB,CAAiCG,WAAjC,EAA8CC,YAAYG,eAAZ,CAA9C,CAAd;AACAA;AACD;;AAED,WAAOJ,WAAP;AACD;;AAEDE,uBAAqBG,CAArB,EAAwB;AACtB,QAAIC,WAAW,CAAC,CAAD,CAAf;AACA,QAAIC,KAAK,CAAT;AACA,QAAIC,KAAK,CAAT;;AAEA,WAAOF,SAASA,SAASH,MAAT,GAAkB,CAA3B,IAAgCE,IAAI,CAA3C,EAA8C;AAC5C,UAAI,CAACE,KAAKC,EAAN,IAAY,CAAZ,KAAkB,CAAtB,EAAyB;AACvBF,iBAASG,IAAT,CAAcC,KAAKC,GAAL,CAAS,CAAT,EAAYJ,EAAZ,IAAmB,IAAIG,KAAKC,GAAL,CAAS,CAAT,EAAYJ,EAAZ,CAAvB,GAA0C,CAAxD;AACAA;AACD,OAHD,MAGO;AACLD,iBAASG,IAAT,CAAe,IAAIC,KAAKC,GAAL,CAAS,CAAT,EAAYH,EAAZ,CAAL,GAAyB,IAAIE,KAAKC,GAAL,CAAS,CAAT,EAAYH,EAAZ,CAA7B,GAAgD,CAA9D;AACAA;AACD;AACF;;AAED,WAAOF,SAASM,OAAT,EAAP;AACD;AAtC4B;kBAAVjB,S","file":"Shellsort.js","sourcesContent":["import InsertionSort from './InsertionSort';\n'use strict';\n\nexport default class Shellsort {\n  constructor() {\n    this.insertionSort = new InsertionSort();\n  }\n\n  shellsort(array) {\n    if (!array) {\n      return [];\n    }\n\n    var sortedArray = array;\n    var gapSequence = this.calculateGapSequence(array.length);\n    var currentGapIndex = 0;\n\n    while (gapSequence[currentGapIndex] >= 1) {\n      sortedArray = this.insertionSort.insertionSort(sortedArray, gapSequence[currentGapIndex]);\n      currentGapIndex++;\n    }\n\n    return sortedArray;\n  }\n\n  calculateGapSequence(n) {\n    var sequence = [1];\n    var k1 = 2;\n    var k2 = 1;\n\n    while (sequence[sequence.length - 1] < n / 2) {\n      if ((k1 + k2) % 2 !== 0) {\n        sequence.push(Math.pow(4, k1) - (3 * Math.pow(2, k1)) + 1);\n        k1++;\n      } else {\n        sequence.push((9 * Math.pow(4, k2)) - (9 * Math.pow(2, k2)) + 1);\n        k2++;\n      }\n    }\n\n    return sequence.reverse();\n  }\n}\n"]}