{"version":3,"sources":["../src/index.js"],"names":["console","log","size","array","createRandomArray","runMeasurements","global","gc","hrStart","process","hrtime","memStart","memoryUsage","rss","info","inspect","shellsort","sort","memEnd","hrEnd","getRandom","Math","floor","random","randomArray","i","push"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;AAEAA,QAAQC,GAAR,CAAY,eAAZ;AACA,IAAIC,OAAO,IAAX;AACAF,QAAQC,GAAR,CAAY,gBAAgBC,IAA5B;;AAEA,IAAIC,QAAQC,kBAAkBF,IAAlB,CAAZ;AACAG,gBAAgBF,KAAhB;AACAG,OAAOC,EAAP;;AAEA,SAASF,eAAT,CAAyBF,KAAzB,EAAgC;AAC9B,MAAIK,UAAUC,QAAQC,MAAR,EAAd;AACA,MAAIC,WAAWF,QAAQG,WAAR,GAAsBC,GAArC;AACAb,UAAQc,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAA1B;;AAEA,MAAII,YAAY,yBAAhB;AACAA,YAAUC,IAAV,CAAed,KAAf;;AAEAH,UAAQc,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAAxB;AACA,MAAIM,SAAST,QAAQG,WAAR,GAAsBC,GAAnC;AACA,MAAIM,QAAQV,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAR,UAAQc,IAAR,CAAaK,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACAnB,UAAQC,GAAR,CAAY,cAAciB,SAASP,QAAvB,CAAZ;AACD;;AAED,SAASP,iBAAT,CAA2BF,IAA3B,EAAiC;AAC/B,MAAIkB,YAAY,YAAW;AACzB,WAAOC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgBrB,IAAhB,GAAuB,CAAxB,GAA6B,CAAxC,CAAP;AACD,GAFD;AAGA,MAAIsB,cAAc,EAAlB;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIvB,IAApB,EAA0BuB,GAA1B,EAA+B;AAC7BD,gBAAYE,IAAZ,CAAiBN,WAAjB;AACD;;AAED,SAAOI,WAAP;AACD","file":"index.js","sourcesContent":["import Shellsort from './js/Shellsort';\r\nimport util from 'util';\r\n'use strict';\r\n\r\nconsole.log('Shellsort OOP');\r\nvar size = 6000;\r\nconsole.log(\"Data size: \" + size);\r\n\r\nvar array = createRandomArray(size);\r\nrunMeasurements(array);\r\nglobal.gc();\r\n\r\nfunction runMeasurements(array) {\r\n  var hrStart = process.hrtime();\r\n  var memStart = process.memoryUsage().rss;\r\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\r\n\r\n  var shellsort = new Shellsort();\r\n  shellsort.sort(array);\r\n\r\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\r\n  var memEnd = process.memoryUsage().rss;\r\n  let hrEnd = process.hrtime(hrStart);\r\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\r\n  console.log(\"Memory: \" + (memEnd - memStart));\r\n}\r\n\r\nfunction createRandomArray(size) {\r\n  var getRandom = function() {\r\n    return Math.floor((Math.random() * size * 2) + 1);\r\n  }\r\n  var randomArray = [];\r\n\r\n  for (var i = 0; i < size; i++) {\r\n    randomArray.push(getRandom());\r\n  }\r\n\r\n  return randomArray;\r\n}\r\n"]}