{"version":3,"sources":["../src/index.js"],"names":["console","log","size","hanoiPegs","concat","runMeasurements","global","gc","hrStart","process","hrtime","memStart","memoryUsage","rss","info","inspect","memEnd","hrEnd"],"mappings":";;AAAA;;AACA;;;;;;AACA;;AAEAA,QAAQC,GAAR,CAAY,oBAAZ;AACA,IAAIC,OAAO,EAAX;AACAF,QAAQC,GAAR,CAAY,gBAAgBC,IAA5B;AACA,IAAIC,YAAY,uCAAWD,IAAX,EAAiB,EAAjB,EAAqBE,MAArB,CAA4B,CAAE,EAAF,EAAM,EAAN,CAA5B,CAAhB;AACAC,gBAAgBF,SAAhB;AACAG,OAAOC,EAAP;;AAEA,SAASF,eAAT,CAAyBF,SAAzB,EAAoC;AAClC,MAAIK,UAAUC,QAAQC,MAAR,EAAd;AACA,MAAIC,WAAWF,QAAQG,WAAR,GAAsBC,GAArC;AACAb,UAAQc,IAAR,CAAa,aAAa,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAA1B;;AAEA,oCAAMT,SAAN,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;;AAEAH,UAAQc,IAAR,CAAa,WAAW,eAAKC,OAAL,CAAaN,QAAQG,WAAR,EAAb,CAAxB;AACA,MAAII,SAASP,QAAQG,WAAR,GAAsBC,GAAnC;AACA,MAAII,QAAQR,QAAQC,MAAR,CAAeF,OAAf,CAAZ;AACAR,UAAQc,IAAR,CAAaG,MAAM,CAAN,IAAW,QAAX,GAAsBA,MAAM,CAAN,IAAW,OAAjC,GAA2C,IAAxD;AACAjB,UAAQc,IAAR,CAAa,cAAcE,SAASL,QAAvB,CAAb;AACD","file":"index.js","sourcesContent":["import { hanoi, buildTower } from './js/tower-of-hanoi-functions'\r\nimport util from 'util';\r\n'use strict';\r\n\r\nconsole.log('Tower of Hanoi OOP');\r\nvar size = 25;\r\nconsole.log(\"Data size: \" + size);\r\nlet hanoiPegs = buildTower(size, []).concat([ [], [] ]);\r\nrunMeasurements(hanoiPegs);\r\nglobal.gc();\r\n\r\nfunction runMeasurements(hanoiPegs) {\r\n  let hrStart = process.hrtime();\r\n  let memStart = process.memoryUsage().rss;\r\n  console.info('start:\\n' + util.inspect(process.memoryUsage()));\r\n\r\n  hanoi(hanoiPegs, 0, 2, 1);\r\n\r\n  console.info('end:\\n' + util.inspect(process.memoryUsage()));\r\n  let memEnd = process.memoryUsage().rss;\r\n  let hrEnd = process.hrtime(hrStart);\r\n  console.info(hrEnd[0] + 's and ' + hrEnd[1] / 1000000 + 'ms');\r\n  console.info('Memory: ' + (memEnd - memStart));\r\n}\r\n"]}