{"version":3,"sources":["../src/index.js"],"names":["console","info","inspect","process","memoryUsage","runBinarySearchTree","global","gc","log","t0","Date","hrStart","hrtime","treeArray","BST","findNode","toString","hrEnd","t1"],"mappings":";;AAAA;;;;AAEA;;;;;;AACA;;AAEAA,QAAQC,IAAR,CAAa,UAAU,eAAKC,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAvB;AACAC;AACAL,QAAQC,IAAR,CAAa,eAAKC,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAb;;AAEAE,OAAOC,EAAP;AACAP,QAAQQ,GAAR,CAAY,eAAKN,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAZ;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,MAAII,KAAK,IAAIC,IAAJ,EAAT;AACA,MAAIC,UAAUR,QAAQS,MAAR,EAAd;;AAEA,MAAIC,YAAY,CAAC,EAAD,EAAI,CAAJ,EAAM,EAAN,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB,EAA0B,CAA1B,CAAhB;AACA,MAAIC,MAAM,+BAAqBD,SAArB,CAAV;AACA;;;;;;AAOAb,UAAQQ,GAAR,CAAYM,IAAIC,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,EAAZ;;AAEA,MAAIC,QAAQd,QAAQS,MAAR,CAAeD,OAAf,CAAZ;AACA,MAAIO,KAAK,IAAIR,IAAJ,EAAT;;AAEAV,UAAQC,IAAR,CAAaiB,KAAKT,EAAL,GAAU,IAAvB;AACAT,UAAQC,IAAR,CAAagB,MAAM,CAAN,IAAW,OAAX,GAAqB,IAAlC;AACD","file":"index.js","sourcesContent":["import BinarySearchTree from './js/BinarySearchTree.js';\nimport _BinaryNode from './js/BinarySearchTree.js';\nimport util from 'util';\n'use strict';\n\nconsole.info('start' + util.inspect(process.memoryUsage()));\nrunBinarySearchTree();\nconsole.info(util.inspect(process.memoryUsage()));\n\nglobal.gc();\nconsole.log(util.inspect(process.memoryUsage()))\n\nfunction runBinarySearchTree() {\n  let t0 = new Date();\n  let hrStart = process.hrtime();\n\n  let treeArray = [13,6,24,2,3,7,9,16,20,32,1];\n  let BST = new BinarySearchTree(treeArray);\n  /*var inserted = 0;\n  while(inserted < 10){\n    if(BST.insert(Math.floor((Math.random()*100)+1))){\n      inserted++;\n    }\n\n  }*/\n  console.log(BST.findNode(1).toString());\n\n  let hrEnd = process.hrtime(hrStart);\n  let t1 = new Date();\n\n  console.info(t1 - t0 + 'ms');\n  console.info(hrEnd[1] / 1000000 + 'ms');\n}\n"]}