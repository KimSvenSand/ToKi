{"version":3,"sources":["../src/index.js"],"names":["console","info","inspect","process","memoryUsage","runBinarySearchTree","global","gc","log","treeArray","BST","rnd","inserted","Math","floor","random","insert","inOrderTraversal","t0","Date","hrStart","hrtime","hrEnd","t1"],"mappings":";;AAAA;;;;AACA;;;;;;AACA;;AAEAA,QAAQC,IAAR,CAAa,UAAU,eAAKC,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAvB;AACAC;AACAL,QAAQC,IAAR,CAAa,eAAKC,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAb;;AAEAE,OAAOC,EAAP;AACAP,QAAQQ,GAAR,CAAY,eAAKN,OAAL,CAAaC,QAAQC,WAAR,EAAb,CAAZ;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,MAAII,YAAY,EAAhB;AACA,MAAIC,MAAM,+BAAqBD,SAArB,CAAV;AACA,MAAIE,MAAM,CAAV;AACA,MAAIC,WAAW,CAAf;AACA,SAAMA,WAAW,EAAjB,EAAoB;AAClBD,UAAME,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAc,GAAf,GAAoB,CAA/B,CAAN;AACA,QAAGL,IAAIM,MAAJ,CAAWL,GAAX,CAAH,EAAmB;AACjBC;AACD;AAEF;AACD;AACAZ,UAAQQ,GAAR,CAAYE,IAAIO,gBAAJ,EAAZ;;AAEA,MAAIC,KAAK,IAAIC,IAAJ,EAAT;AACA,MAAIC,UAAUjB,QAAQkB,MAAR,EAAd;;AAIA,MAAIC,QAAQnB,QAAQkB,MAAR,CAAeD,OAAf,CAAZ;AACA,MAAIG,KAAK,IAAIJ,IAAJ,EAAT;;AAEAnB,UAAQC,IAAR,CAAasB,KAAKL,EAAL,GAAU,IAAvB;AACAlB,UAAQC,IAAR,CAAaqB,MAAM,CAAN,IAAW,OAAX,GAAqB,IAAlC;AACD","file":"index.js","sourcesContent":["import BinarySearchTree from './js/BinarySearchTree.js';\nimport util from 'util';\n'use strict';\n\nconsole.info('start' + util.inspect(process.memoryUsage()));\nrunBinarySearchTree();\nconsole.info(util.inspect(process.memoryUsage()));\n\nglobal.gc();\nconsole.log(util.inspect(process.memoryUsage()))\n\nfunction runBinarySearchTree() {\n  let treeArray = [];\n  let BST = new BinarySearchTree(treeArray);\n  var rnd = 0;\n  var inserted = 0;\n  while(inserted < 10){\n    rnd = Math.floor((Math.random()*100)+1);\n    if(BST.insert(rnd)){\n      inserted++;\n    }\n\n  }\n  //console.log(BST);\n  console.log(BST.inOrderTraversal());\n\n  let t0 = new Date();\n  let hrStart = process.hrtime();\n\n\n\n  let hrEnd = process.hrtime(hrStart);\n  let t1 = new Date();\n\n  console.info(t1 - t0 + 'ms');\n  console.info(hrEnd[1] / 1000000 + 'ms');\n}\n"]}