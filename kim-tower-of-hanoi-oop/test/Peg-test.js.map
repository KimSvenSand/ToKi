{"version":3,"sources":["../es6-test/Peg-test.js"],"names":["describe","createDiscArray","array","it","peg","getDiscs","to","eql","getNrOfDiscs","equal","peak","popDisc","slice","pushDisc","getNrOfConsecutiveDiscs"],"mappings":"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","file":"Peg-test.js","sourcesContent":["import Peg from '../dist/js/Peg'\nimport Disc from '../dist/js/Disc'\nimport { expect } from 'chai'\n'use strict'\n\ndescribe('Disc', function() {\n  function createDiscArray() {\n    var array = [];\n\n    array[0] = new Disc(5);\n    array[1] = new Disc(4);\n    array[2] = new Disc(3);\n    array[3] = new Disc(2);\n    array[4] = new Disc(1);\n\n    return array;\n  }\n\n  describe('new Disc(nrOfDiscs)', function() {\n    it('Should initiate a peg with nrOfDiscs Discs', function() {\n      var peg = new Peg(5);\n      expect(peg.getDiscs()).to.eql(createDiscArray());\n      expect(peg.getNrOfDiscs()).to.equal(5);\n      var peg = new Peg(0);\n      expect(peg.getDiscs()).to.eql([]);\n      expect(peg.getNrOfDiscs()).to.equal(0);\n    });\n  });\n\n  describe('peak()', function() {\n    it('should return copy of top disk', function() {\n      var peg = new Peg(5);\n      expect(peg.peak()).to.eql(new Disc(1));\n      peg = new Peg(0);\n      expect(peg.peak()).to.equal(null);\n    });\n  });\n\n  describe('popDisc()', function() {\n    it('Should remove top disc and return it', function() {\n      var peg = new Peg(5);\n      expect(peg.popDisc()).to.eql(new Disc(1));\n      expect(peg.getDiscs()).to.eql(createDiscArray().slice(0, 4));\n\n      peg = new Peg(0);\n      expect(peg.popDisc()).to.eql(null);\n      expect(peg.getDiscs()).to.eql([]);\n    });\n  });\n\n  describe('pushDisc(disc)', function() {\n    it('Should push disc and return true if successful', function() {\n      var peg = new Peg(5);\n      expect(peg.pushDisc()).to.equal(false);\n      expect(peg.pushDisc(new Disc(1))).to.equal(false);\n      expect(peg.getDiscs()).to.eql(createDiscArray());\n      peg.popDisc();\n      expect(peg.pushDisc(new Disc(1))).to.equal(true);\n      expect(peg.getDiscs()).to.eql(createDiscArray());\n    });\n  });\n\n  describe('getConsecutiveNrOfDiscs', function() {\n    it('should return the number of consecutive discs', function() {\n      var peg = new Peg(5);\n      expect(peg.getNrOfConsecutiveDiscs()).to.equal(5);\n\n      peg = new Peg(0);\n      expect(peg.getNrOfConsecutiveDiscs()).to.equal(0);\n\n      peg.pushDisc(new Disc(5));\n      peg.pushDisc(new Disc(4));\n      peg.pushDisc(new Disc(1));\n\n      expect(peg.getNrOfConsecutiveDiscs()).to.equal(1);\n\n      peg.popDisc();\n      peg.popDisc();\n      peg.pushDisc(new Disc(2));\n      peg.pushDisc(new Disc(1));\n\n      expect(peg.getNrOfConsecutiveDiscs()).to.equal(2);\n    });\n  });\n})\n"]}