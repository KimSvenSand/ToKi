{"version":3,"sources":["../../src/js/Peg.js"],"names":["Peg","constructor","nrOfDiscs","_nrOfDiscs","_discs","initDiscs","discArray","i","push","popDisc","peak","pop","pushDisc","disc","getSize","length","getDiscs","getNrOfDiscs","getNrOfConsecutiveDiscs","currentDisc","nextDisc","nrOfConsecutiveDiscs"],"mappings":";;;;;;AAAA;;;;;;AACA;;AAEe,MAAMA,GAAN,CAAU;AACvBC,cAAYC,SAAZ,EAAuB;AACrB,SAAKC,UAAL,GAAkBD,SAAlB;AACA,SAAKE,MAAL,GAAc,KAAKC,SAAL,CAAe,KAAKF,UAApB,CAAd;AACD;;AAEDE,YAAUH,SAAV,EAAqB;AACnB,QAAII,YAAY,EAAhB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,SAApB,EAA+BK,GAA/B,EAAoC;AAClCD,gBAAUE,IAAV,CAAe,mBAASN,YAAYK,CAArB,CAAf;AACD;;AAED,WAAOD,SAAP;AACD;;AAEDG,YAAU;AACR,QAAI,KAAKC,IAAL,EAAJ,EAAiB;AACf,WAAKP,UAAL;AACA,aAAO,KAAKC,MAAL,CAAYO,GAAZ,EAAP;AACD,KAHD,MAGO;AACL,aAAO,IAAP;AACD;AACF;;AAEDC,WAASC,IAAT,EAAe;AACb,QAAIA,IAAJ,EAAU;AACR,UAAI,KAAKH,IAAL,OAAgB,IAApB,EAA0B;AACxB,aAAKP,UAAL;AACA,aAAKC,MAAL,CAAYI,IAAZ,CAAiBK,IAAjB;AACA,eAAO,IAAP;AACD;AACD,UAAIA,KAAKC,OAAL,MAAkB,KAAKJ,IAAL,GAAYI,OAAZ,EAAtB,EAA6C;AAC3C,eAAO,KAAP;AACD,OAFD,MAEO;AACL,aAAKX,UAAL;AACA,aAAKC,MAAL,CAAYI,IAAZ,CAAiBK,IAAjB;AACA,eAAO,IAAP;AACD;AACF,KAbD,MAaO;AACL,aAAO,KAAP;AACD;AACF;;AAEDH,SAAO;AACL,QAAI,KAAKN,MAAL,CAAY,KAAKA,MAAL,CAAYW,MAAZ,GAAqB,CAAjC,CAAJ,EAAyC;AACvC,aAAO,mBAAS,KAAKX,MAAL,CAAY,KAAKA,MAAL,CAAYW,MAAZ,GAAqB,CAAjC,EAAoCD,OAApC,EAAT,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDE,aAAW;AACT,WAAO,KAAKZ,MAAZ;AACD;;AAEDa,iBAAe;AACb,WAAO,KAAKd,UAAZ;AACD;;AAEDe,4BAA0B;AACxB,QAAI,KAAKf,UAAL,IAAmB,CAAvB,EAA0B;AACxB,aAAO,KAAKA,UAAZ;AACD;;AAED,QAAIgB,cAAc,KAAKf,MAAL,CAAY,KAAKD,UAAL,GAAkB,CAA9B,CAAlB;AACA,QAAIiB,WAAW,KAAKhB,MAAL,CAAY,KAAKD,UAAL,GAAkB,CAA9B,CAAf;AACA,QAAIkB,uBAAuB,CAA3B;;AAEA,WAAOA,wBAAwB,KAAKlB,UAAL,GAAkB,CAA1C,IAA+CiB,SAASN,OAAT,OAAuBK,YAAYL,OAAZ,KAAwB,CAArG,EAAwG;AACtGO;AACAF,oBAAc,KAAKf,MAAL,CAAY,KAAKD,UAAL,GAAkBkB,oBAA9B,CAAd;AACAD,iBAAW,KAAKhB,MAAL,CAAY,KAAKD,UAAL,GAAkBkB,oBAAlB,GAAyC,CAArD,CAAX;AACD;;AAED,WAAOA,oBAAP;AACD;AA5EsB;kBAAJrB,G","file":"Peg.js","sourcesContent":["import Disc from './Disc'\r\n'use strict'\r\n\r\nexport default class Peg {\r\n  constructor(nrOfDiscs) {\r\n    this._nrOfDiscs = nrOfDiscs;\r\n    this._discs = this.initDiscs(this._nrOfDiscs);\r\n  }\r\n\r\n  initDiscs(nrOfDiscs) {\r\n    var discArray = [];\r\n\r\n    for (var i = 0; i < nrOfDiscs; i++) {\r\n      discArray.push(new Disc(nrOfDiscs - i));\r\n    }\r\n\r\n    return discArray;\r\n  }\r\n\r\n  popDisc() {\r\n    if (this.peak()) {\r\n      this._nrOfDiscs--;\r\n      return this._discs.pop();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  pushDisc(disc) {\r\n    if (disc) {\r\n      if (this.peak() === null) {\r\n        this._nrOfDiscs++;\r\n        this._discs.push(disc);\r\n        return true;\r\n      }\r\n      if (disc.getSize() >= this.peak().getSize()) {\r\n        return false;\r\n      } else {\r\n        this._nrOfDiscs++;\r\n        this._discs.push(disc);\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  peak() {\r\n    if (this._discs[this._discs.length - 1]) {\r\n      return new Disc(this._discs[this._discs.length - 1].getSize());\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getDiscs() {\r\n    return this._discs;\r\n  }\r\n\r\n  getNrOfDiscs() {\r\n    return this._nrOfDiscs;\r\n  }\r\n\r\n  getNrOfConsecutiveDiscs() {\r\n    if (this._nrOfDiscs <= 1) {\r\n      return this._nrOfDiscs;\r\n    }\r\n\r\n    var currentDisc = this._discs[this._nrOfDiscs - 1];\r\n    var nextDisc = this._discs[this._nrOfDiscs - 2];\r\n    var nrOfConsecutiveDiscs = 1;\r\n\r\n    while (nrOfConsecutiveDiscs <= this._nrOfDiscs - 1 && nextDisc.getSize() === currentDisc.getSize() + 1) {\r\n      nrOfConsecutiveDiscs++;\r\n      currentDisc = this._discs[this._nrOfDiscs - nrOfConsecutiveDiscs];\r\n      nextDisc = this._discs[this._nrOfDiscs - nrOfConsecutiveDiscs - 1];\r\n    }\r\n\r\n    return nrOfConsecutiveDiscs;\r\n  }\r\n}\r\n"]}