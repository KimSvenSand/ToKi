{"version":3,"sources":["../../src/js/TowerOfHanoi.js"],"names":["TowerOfHanoi","constructor","nrOfDiscs","_nrOfPegs","_nrOfDiscs","_pegs","initPegs","_currentPeg","pegsArray","push","i","getPegs","getCurrentPeg","isLegalMove","start","dest","peak","getSize","playHanoi","destIndex","getNrOfDiscs","stack","aux","current","getNrOfConsecutiveDiscs","pushDisc","popDisc","Object","assign","length","pop"],"mappings":"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","file":"TowerOfHanoi.js","sourcesContent":["import Peg from './Peg'\n'use strict'\n\nexport default class TowerOfHanoi {\n  constructor(nrOfDiscs) {\n    this._nrOfPegs = 3;\n    this._nrOfDiscs = nrOfDiscs;\n    this._pegs = this.initPegs(this._nrOfDiscs);\n    this._currentPeg = 0;\n  }\n\n  initPegs(nrOfDiscs) {\n    var pegsArray = [];\n    pegsArray.push(new Peg(nrOfDiscs));\n\n    for (var i = 1; i < this._nrOfPegs; i++) {\n      pegsArray.push(new Peg(0));\n    }\n\n    return pegsArray;\n  }\n\n  getPegs() {\n    return this._pegs;\n  }\n\n  getCurrentPeg() {\n    return this._currentPeg;\n  }\n\n  isLegalMove(start, dest) {\n    if (dest.peak() === null) {\n      return true;\n    } else if (start.peak() === null) {\n      return false;\n    } else {\n      if (start.peak().getSize() < dest.peak().getSize()) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  playHanoi(destIndex) {\n    var nrOfDiscs = this._pegs[this._currentPeg].getNrOfDiscs();\n    var stack = [];\n    var start = this._pegs[this._currentPeg];\n    var dest = this._pegs[destIndex];\n    var aux = this._pegs[3 - this._currentPeg - destIndex];\n    var current = {\n      'start': start,\n      'dest': dest,\n      'aux': aux\n    }\n\n    if (this._pegs[destIndex] !== this._pegs[this._currentPeg]) {\n      //while all disks are not at dest\n      while (dest.getNrOfDiscs() < nrOfDiscs) {\n        //while current start is not empty\n        while(current.start.getNrOfConsecutiveDiscs() > 0) {\n          //If even\n          if (current.start.getNrOfConsecutiveDiscs() % 2 === 0) {\n            if (this.isLegalMove(current.start, current.aux)) {\n              current.aux.pushDisc(current.start.popDisc());\n              stack.push(Object.assign({}, current));\n              current.start = stack[stack.length - 1].dest;\n              current.dest = stack[stack.length - 1].aux;\n              current.aux = stack[stack.length - 1].start;\n            } else {\n              current = stack.pop();\n            }\n          //Else if odd\n          } else {\n            if (this.isLegalMove(current.start, current.dest)) {\n              current.dest.pushDisc(current.start.popDisc());\n              stack.push(Object.assign({}, current));\n              current.start = stack[stack.length - 1].aux;\n              current.aux = stack[stack.length - 1].start;\n              current.dest = stack[stack.length - 1].dest;\n            } else {\n              current = stack.pop();\n            }\n          }\n        }\n        current = stack.pop();\n      }\n    }\n    this._currentPeg = destIndex;\n  }\n}\n"]}